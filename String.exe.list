EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
String.exe -- emu8086 assembler version: 4.05  
 
[ 16.02.2021  --  16:37:05 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       name "String"
[   2]        :                                       .model small
[   3]        :                                       .stack 100h
[   4]        :                                       .code
[   5]        :                                       
[   6]    0100:                                       start:
[   7]    0100: B8 14 00                              mov ax, @data
[   8]    0103: 8E D8                                 mov ds, ax
[   9]        :                                       
[  10]    0105: B4 09                                 mov ah, 9h
[  11]    0107: BA 00 00                              mov dx, offset message1
[  12]    010A: CD 21                                 int 21h
[  13]        :                                       
[  14]    010C: E8 23 00                              call nextline
[  15]        :                                       
[  16]    010F: B4 09                                 mov ah, 9h
[  17]    0111: BA 0B 00                              mov dx, offset message2
[  18]    0114: CD 21                                 int 21h
[  19]        :                                       
[  20]    0116: E8 19 00                              call nextline
[  21]        :                                       
[  22]    0119: B4 09                                 mov ah, 9h
[  23]    011B: BA 13 00                              mov dx, offset message3
[  24]    011E: CD 21                                 int 21h
[  25]        :                                       
[  26]    0120: E8 0F 00                              call nextline
[  27]        :                                       
[  28]    0123: B4 09                                 mov ah, 9h
[  29]    0125: BA 1C 00                              mov dx, offset message4
[  30]    0128: CD 21                                 int 21h
[  31]        :                                       
[  32]    012A: E8 05 00                              call nextline
[  33]        :                                       
[  34]        :                                       
[  35]    012D: B8 00 4C                              mov ax, 4c00h
[  36]    0130: CD 21                                 int 21h
[  37]        :                                       
[  38]    0132:                                       nextline:
[  39]    0132: B4 02                                 mov ah, 02h
[  40]    0134: B2 0A                                 mov dl, 0ah
[  41]    0136: CD 21                                 int 21h
[  42]        :                                       
[  43]    0138: B2 0D                                 mov dl, 0dh
[  44]    013A: CD 21                                 int 21h
[  45]    013C: C3                                    ret
[  46]        :                                       
[  47]        :                                       .data
[  48]        :                                       
[  49]    0140: 48 65 6C 6C 6F 20 53 74 61 73 24      message1 db "Hello Stas$"
[  50]    014B: 49 20 4C 4F 56 45 20 24               message2 db "I LOVE $"
[  51]    0153: 41 53 53 45 4D 42 4C 59 24            message3 db "ASSEMBLY$"
[  52]    015C: 4E 4F 29 29 29 29 29 24               message4 db "NO)))))$"
[  53]        :                                       
[  54]        :                                       
[  55]        :                                       
[  56]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 64      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 19      -   check sum (l.byte)
0013: BF      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 10      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 10      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
